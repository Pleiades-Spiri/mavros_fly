<launch>

      <!--<include file="$(find apriltag_ros)/launch/continuous_detection.launch" />-->




      <arg name="Vel" default="5.0" />
      <arg name="xdel" default="0.0" />
      <arg name="tol" default="0.05" />
      <arg name="Vtol" default="0.01" />
      <arg name="ctlMode" default="1.0" />

     
      <param name="/mavros/param/MPC_XY_VEL_MAX" value="$(arg Vel)"/>
      <param name="pad_to_target_xdelta" value="$(arg xdel)"/>
      <param name="target_tolerance" value="$(arg tol)"/>
      <param name="vol_tolerance" value="$(arg Vtol)"/>
      <param name="mode" value="$(arg ctlMode)"/>
      <node name="percise_landing" pkg="mavros_fly" type="mavros_fly_lander" output="screen">
      	<remap from="tag_detections" to="tag_detections"/>

      </node>




      <!-- Set to true to track-->
      <arg name="track_tag" default="true"/>

      <arg name="drone_frame" default="fcu"/>

      <!-- IMPORTANT. TF from drone to camera frames assuming camera is static-->
      <!--<node pkg="tf" type="static_transform_publisher" name="tf_drone_to_camera" args="0.1 0 -0.1 -1.57 0 -3.1415 $(arg drone_frame) cgo3_camera_optical_frame 33"/>-->

      <!-- World to map -->
      <node pkg="tf" type="static_transform_publisher" name="tf_world_to_map" args="0 0 0 0 0 0 world map 33"/>

      <!-- World to local_origin -->
      <node pkg="tf" type="static_transform_publisher" name="tf_world_to_local_origin" args="0 0 0 0 0 0 world local_origin 33"/>

      <!-- World to odom -->
      <node pkg="tf" type="static_transform_publisher" name="tf_world_to_odom" args="0 0 0 0 0 0 map odom 33"/>

      <!--<include file="$(find mavros_apriltag_tracking)/launch/mavros.launch">
          <arg name="gazebo_world" value="$(find mavros_apriltag_tracking)/worlds/empty.world"/>
          <arg name="verbose" value="true"/>
      </include>-->

      <!--<include file="$(find mavros_apriltag_tracking)/launch/continuous_detection.launch"/>-->

      <!-- Position controller -->
      <node pkg="mavros_fly" name="mavros_offboard_controller_node" type="mavros_offboard_controller.py" output="screen">
         
          <!--<remap from="setpoint/relative_pos" to="/aprilTag_landing_point"/>-->
          <!-- Lateral controller gains -->
          <param name="horizontal_controller/kP" value="1.0"/>
          <param name="horizontal_controller/kI" value="0.01"/>
          <!-- Vertical controller gains -->
          <param name="vertical_controller/kP" value="1.0"/>
          <param name="vertical_controller/kI" value="0.01"/>

          <!-- Maximum horizontal vlocity magnitude -->
          <param name="horizontal_controller/vMAX" value="0.6"/>
          <!-- Maximum verical vlocity magnitude -->
          <param name="vertical_controller/vUpMAX" value="1.0"/>
          <param name="vertical_controller/vDownMAX" value="0.1"/>
      </node>

      <!-- Tag setpoint publisher 
          Takes pose of detected tag and publishes corresponding relative position setpoints to the controller
      -->
      <node if="$(arg track_tag)" pkg="mavros_fly" name="apriltag_setpoint_publisher_node" type="apriltag_setpoint_publisher.py" output="screen">
          <remap from="kf/estimate" to="/aprilTag_landing_location"/>
          <!-- Desired tag id to be tracked -->
          <param name="tag_id" value="0"/>
          <!-- Drone's frame name for transformation-->
          <param name="drone_frame_id" value="/$(arg drone_frame)"/>
          <!-- Tag's frame name for transformation-->
          <param name="tag_frame_id" value="/tagTF"/>
          <!-- Topics on which tags poses are published -->
          <param name="tags_topic" value="tag_detections"/>
          <!-- Controller setpoint topic-->
          <param name="setpoint_topic" value="setpoint/relative_pos"/>
          <!-- Desired alttitude above tag in meters. Should be positive-->
          <param name="alt_from_tag" value="0.0"/>
      </node>

     
</launch>
